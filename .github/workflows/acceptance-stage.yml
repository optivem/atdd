# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Acceptance Stage

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
#    - name: Pull Docker image
#      run: docker pull ghcr.io/optivem/atdd/eshop-monolith:latest

    - uses: actions/checkout@v4

    - name: Set up JDK 24
      uses: actions/setup-java@v4
      with:
        java-version: '24'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4.0.0

    - name: Make Gradle Wrapper executable
      run: chmod +x ./gradlew

    - name: Setup Acceptance Environment for Acceptance Tests
      run: docker compose -f docker-compose.acc.yml up -d
      # NOTE: In real life applications, you'd be deploying your System to Acceptance Environment
      # For this demo application, I'm using Docker Compose

    - name: Run Acceptance Tests
      run: ./gradlew test --tests com.optivem.atdd.acc.acceptance.*

    - name: Run External System Contract Tests (targeting External System Stubs)
      run: ./gradlew test --tests com.optivem.atdd.acc.external.stub.*

    - name: Destroy Acceptance Test Environment
      run: docker compose -f docker-compose.acc.yml down
      # Note: In real life applications, your choice whether to have transient or permament
      # Here I destroyed it due to Docker Compose

    - name: Setup Acceptance Environment for E2E Tests
      run: docker compose -f docker-compose.e2e.yml up -d
      # NOTE: In real life applications, you'd be deploying your System to Acceptance Environment
      # For this demo application, I'm using Docker Compose

    - name: Run External System Contract Tests (targeting External System Test Instances)
      run: ./gradlew test --tests com.optivem.atdd.acc.external.real.*

    - name: Run E2E Tests
      run: ./gradlew test --tests com.optivem.atdd.e2e.*

    - name: Destroy Acceptance Test Environment
      run: docker compose -f docker-compose.e2e.yml down
      # Note: In real life applications, your choice whether to have transient or permament
      # Here I destroyed it due to Docker Compose